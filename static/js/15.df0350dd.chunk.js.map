{"version":3,"file":"static/js/15.df0350dd.chunk.js","mappings":"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","sources":["components/ApiService/ApiService.js","components/TrendingMoviesList/TrendingMoviesList.styled.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","components/SearchMoviesList/SearchMoviesList.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMGQzYjM3NjJjNjFkMmVmNDc5ZDA2MzRiYWY0ZTViZiIsInN1YiI6IjY1NWZiYzhiOTJlNTViMDBhY2FmZmE3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Bl8cqM_r4GNcw9sxGDSgqJJg5NQZK9yVoEpC7bP8rg4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/all/day?language=en-US`);\n  return data.results;\n};\n\nexport const getMovie = async search => {\n  const { data } = await axios.get(\n    `search/movie?query=${search}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`movie/${id}?language=en-US`);\n  return response;\n};\n\nexport const getMovieCastById = async id => {\n  const response = await axios.get(`movie/${id}/credits?language=en-US`);\n  return response.data.cast;\n};\n\nexport const getMovieReviewsById = async id => {\n  const response = await axios.get(`movie/${id}/reviews?language=en-US`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 300px;\n`;\n\nexport const MovieName = styled.h3`\n  text-align: center;\n  margin-top: 2px;\n`;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  height: 400px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n\n  margin-bottom: 40px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  height: 40px;\n`;\n\nexport const SubmitButton = styled.button`\n  display: block;\n  width: 100px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { Form, FormInput, SubmitButton } from './SearchBar.styled';\n\nexport const Searchbar = () => {\n  const [params, setParams] = useSearchParams();\n\n  const updateQuery = value => {\n    params.set('query', value);\n    setParams(params);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={updateQuery}>\n        <FormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"query\"\n          autoFocus\n          placeholder=\"Enter movie title\"\n        />\n\n        <SubmitButton type=\"submit\">seacrh</SubmitButton>\n      </Form>\n    </div>\n  );\n};\n","import {\n  MoviesList,\n  MovieItem,\n  MovieName,\n  MoviePoster,\n} from 'components/TrendingMoviesList/TrendingMoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const SearchMoviesList = ({ moviesList }) => {\n  const location = useLocation();\n\n  const defaultImage =\n    'https://st4.depositphotos.com/14953852/24787/v/450/depositphotos_247872612-stock-illustration-no-image-available-icon-vector.jpg';\n\n  return (\n    <MoviesList>\n      {moviesList.map(item => (\n        <MovieItem key={item.id}>\n          <Link to={`${item.id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                item.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${item.poster_path}`\n                  : defaultImage\n              }\n              alt={item.title}\n              width={300}\n            />\n            <MovieName> {item.title || item.name}</MovieName>\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesList>\n  );\n};\n","import { getMovie } from 'components/ApiService/ApiService';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { SearchMoviesList } from 'components/SearchMoviesList/SearchMoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [params] = useSearchParams();\n  const query = params.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function componentDidUpdate() {\n      try {\n        setIsLoading(true);\n        await getMovie(query).then(response => {\n          if (response.total === 0) {\n            return;\n          }\n          setMovies(response.results);\n        });\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    componentDidUpdate();\n  }, [query]);\n\n  return (\n    <div>\n      <Searchbar />\n      {movies.length > 0 && query !== '' && (\n        <SearchMoviesList moviesList={movies} />\n      )}\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":["axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getMovie","_ref2","_callee2","search","_yield$axios$get2","_context2","concat","_x","getMovieById","_ref3","_callee3","id","response","_context3","_x2","getMovieCastById","_ref4","_callee4","_context4","cast","_x3","getMovieReviewsById","_ref5","_callee5","_context5","_x4","MoviesList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieName","_templateObject3","MoviePoster","_templateObject4","Form","FormInput","SubmitButton","Searchbar","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","params","setParams","_jsx","children","_jsxs","onSubmit","value","set","type","autoComplete","name","autoFocus","placeholder","SearchMoviesList","moviesList","location","useLocation","map","item","Link","to","state","from","src","poster_path","alt","title","width","Movies","_params$get","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","query","get","useEffect","_componentDidUpdate","then","total","t0","finish","componentDidUpdate","length","RotatingLines","strokeColor","strokeWidth","animationDuration","visible"],"sourceRoot":""}